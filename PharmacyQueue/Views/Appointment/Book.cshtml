@model PharmacyQueue.Models.Appointment

@{
    ViewData["Title"] = "Book Appointment";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-sm">
                <div class="card-header text-center py-4">
                    <div class="mb-3">
                        <i class="fas fa-calendar-plus text-white fa-3x"></i>
                    </div>
                    <h1 class="h3 text-white mb-0">Book Your Appointment</h1>
                </div>
                <div class="card-body p-4">
                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            <ul class="mb-0">
                                @foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                {
                                    <li>@modelError.ErrorMessage</li>
                                }
                            </ul>
                        </div>
                    }

                    <form asp-action="Book" method="post" class="needs-validation" novalidate>
                        @Html.AntiForgeryToken()

                        <div class="mb-4">
                            <label class="form-label">Full Name</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light border-0">
                                    <i class="fas fa-user text-primary"></i>
                                </span>
                                <input type="text" class="form-control" name="Name" placeholder="Enter your full name" required value="@Model?.Name">
                            </div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Email Address</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light border-0">
                                    <i class="fas fa-envelope text-primary"></i>
                                </span>
                                <input type="email" class="form-control" name="Email" placeholder="Enter your email" required value="@Model?.Email">
                            </div>
                            <div class="form-text">We'll send your queue number to this email address.</div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Phone Number</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light border-0">
                                    <i class="fas fa-phone text-primary"></i>
                                </span>
                                <input type="tel" class="form-control" name="Phone" placeholder="Enter your phone number" required value="@Model?.Phone">
                            </div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Purpose of Visit</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light border-0">
                                    <i class="fas fa-clipboard-list text-primary"></i>
                                </span>
                                <select class="form-select" name="Purpose" required>
                                    <option value="">Select a purpose</option>
                                    <option value="Prescription Pickup" selected="@(Model?.Purpose == "Prescription Pickup")">Prescription Pickup</option>
                                    <option value="Consultation" selected="@(Model?.Purpose == "Consultation")">Consultation</option>
                                    <option value="Vaccination" selected="@(Model?.Purpose == "Vaccination")">Vaccination</option>
                                    <option value="Medical Supplies" selected="@(Model?.Purpose == "Medical Supplies")">Medical Supplies</option>
                                    <option value="Other" selected="@(Model?.Purpose == "Other")">Other</option>
                                </select>
                            </div>
                        </div>

                        <div class="mb-3" id="additionalNotesDiv" style="display: none;">
                            <label for="AdditionalNotes" class="form-label fw-bold">Additional Notes</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light"><i class="fas fa-comment-alt"></i></span>
                                <textarea class="form-control" id="AdditionalNotes" name="AdditionalNotes" 
                                        rows="2" placeholder="Please specify your purpose of visit">@Model?.AdditionalNotes</textarea>
                            </div>
                            <span asp-validation-for="AdditionalNotes" class="text-danger small"></span>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="fas fa-calendar-check me-2"></i>Book Appointment
                            </button>
                            <button type="reset" class="btn btn-outline-secondary">
                                <i class="fas fa-undo me-2"></i>Reset Fields
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Loading Overlay -->
<div id="loadingOverlay" class="loading-overlay">
    <div class="loading-content">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <h4 class="mt-3 text-primary">Booking Your Appointment</h4>
        <p class="text-muted">Please wait while we process your request...</p>
    </div>
</div>

@section Scripts {
    <script>
        // Form validation
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        } else {
                            // Show loading overlay when form is valid and being submitted
                            document.getElementById('loadingOverlay').classList.add('active');
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
    
    <script>
        $(document).ready(function() {
            // Show/hide additional notes based on initial purpose value
            if ($('#Purpose').val() === 'Other') {
                $('#additionalNotesDiv').show();
            }

            // Show/hide additional notes based on purpose selection
            $('#Purpose').change(function() {
                if ($(this).val() === 'Other') {
                    $('#additionalNotesDiv').slideDown();
                } else {
                    $('#additionalNotesDiv').slideUp();
                    $('#AdditionalNotes').val('');
                }
            });

            // Handle form submission
            $('form').on('submit', function(e) {
                if ($('#Purpose').val() === 'Other' && !$('#AdditionalNotes').val().trim()) {
                    e.preventDefault();
                    alert('Please provide additional notes for Other purpose.');
                    $('#AdditionalNotes').focus();
                    return false;
                }
            });

            // Handle reset button click
            $('button[type="reset"]').click(function() {
                // Reset all form fields
                $('form')[0].reset();
                // Hide additional notes if visible
                $('#additionalNotesDiv').slideUp();
                // Clear any validation messages
                $('.text-danger').text('');
                // Focus on the first field
                $('#Name').focus();
            });
        });
    </script>
} 